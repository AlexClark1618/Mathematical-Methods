def rk2(t0, t, y0, step):
    iterations=round((t-t0)/step)
    
    y=y0 #initial y value
    y_data=[y0]
    t_data=[t0]
    
    for n in range(iterations):
        k1= step * diff_equ(t0, y)
        k2= step * diff_equ(t0 + step, y+k1)

        y= y + ((k1 + k2) / 2) #Estimate of next y value
        
        t0= t0 + step #Moves t to next value
        
        y_data.append(y)
        t_data.append(t0)
        
    return t_data, y_data #Returns lists for plotting purposes 

# If an approximate value of y is needed at some t simply replace the last three line of code with 'return y' 

#Note: Calls on seperate function 'diff_equ'
